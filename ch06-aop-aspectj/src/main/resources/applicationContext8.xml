<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
">

    <!-- 声明目标类对象 -->
    <bean id="someService" class="com.company.cglib.withInterface.SomeServiceImpl" />
        
    
    <!-- 声明切面类对象  -->
    <bean id="myAspect" class="com.company.cglib.withInterface.MyAspect" />
   
    <!-- 声明自动代理生成器，使用aspectj框架内部的功能，创建目标对象的代理对象。
        创建代理对象是在内存中实现的，整个实现过程是修改目标对象的内存中的结果，把这个目标对象创建为一个代理对象。所以目标对象就是被修改后的代理对象  
    
        aspectj-autoproxy 会把spring容器中所有的对象扫描一次，并找到@Aspect注解的对象/类，一次性都生成代理对象
    
    -->
    <!--<aop:aspectj-autoproxy />-->
    
    <!--
        如果你的目标类有接口，一般是有jdk动态代理，但你仍希望用cglib代理, 则需要下面的配置
        proxy-target-class="true" 就是要告诉框架要使用cglib代理
    -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
</beans>

